name: Build PipeWire with AAC Codec

on:
  create:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ github.workspace }} 
    outputs:
      build_matrix: ${{ steps.matrix_setup.outputs.build }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - id: matrix_setup
        run: |
          PACKAGES=$(ls -d ${{ github.workspace }}/packages/* | xargs -n 1 basename | jq -R . | jq -s .)
          DISTS=$(echo debian:{sid,bookworm}-slim | jq -R . | jq -s .)
          ARCHS=$(echo amd64 arm64 | jq -R . | jq -s .)
          echo "build=$(
            jq -cn --argjson p "$PACKAGES" \
                   --argjson d "$DISTS" \
                   --argjson a "$ARCHS" \
              '{package:$p,"os-version":$d,arch:$a}'
          )" >> $GITHUB_OUTPUT
      

  build:
    needs: setup
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup.outputs.build_matrix) }}
    steps:
      # - name: Set up environment
      #   run: |
      #     if [ -f /etc/apt/sources.list.d/debian.sources ]; then
      #         sed -i '/^Types:/ s/$/ deb-src/' /etc/apt/sources.list.d/debian.sources
      #         cat /etc/apt/sources.list.d/debian.sources
      #     else
      #         echo "deb-src https://deb.debian.org/debian/ sid main" | tee /etc/apt/sources.list
      #         cat /etc/apt/sources.list

      #     fi
      #     apt-get update
      #     # apt-get install -y build-essential devscripts debhelper dh-make

      # - name: Download PipeWire Source
      #   run: |
      #     apt-get source pipewire
      #     cd pipewire-*  # Change to the downloaded source directory
      #     echo "bluez5-codec-aac=enabled" >> debian/flags

      - name: Build PipeWire Package
        uses: jtdor/build-deb-action@v1
        env:
          DEB_BUILD_OPTIONS: noautodbgsym
        with:
          docker-image: "${{ matrix.os-version }}"
          host-arch: "${{ matrix.arch }}"
          source-dir: "${{ github.workspace }}/build"
          setup-hook: |
            if [ -f /etc/apt/sources.list.d/debian.sources ]; then
                sed -i '/^Types:/ s/$/ deb-src/' /etc/apt/sources.list.d/debian.sources
                cat /etc/apt/sources.list.d/debian.sources
            else
                echo "deb-src https://deb.debian.org/debian/ sid main" | tee /etc/apt/sources.list
                cat /etc/apt/sources.list
            fi
            apt-get update
            apt-get install -y build-essential devscripts debhelper dh-make 
            bash ${{ github.workspace }}/check-dsc.sh ${{ matrix.package }} ${{ github.workspace }}/packages ${{ github.workspace }}/build
            # apt-get source pipewire
            # cd pipewire-*  # Change to the downloaded source directory
            # echo "bluez5-codec-aac=enabled" >> debian/flags
          # extra-build-deps: devscripts git dpkg-cross
          before-build-hook: "dch --local ~${{ github.run_number }} 'GitHub build for PipeWire with AAC Codec'"
          buildpackage-opts: --build=binary --no-sign -d

      - name: Upload deb files
        uses: actions/upload-artifact@v4
        with:
          name: "pipewire-packages-${{ matrix.arch }}"
          path: ./debian/artifacts/*

  merge-artefacts:
    name: Merge all deb files to single artifact
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Merge debian packages
        uses: actions/upload-artifact/merge@v4

  add_release:
    name: Add package to release
    needs: merge-artefacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: merged-artifacts
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: ./*.deb

  add_repo:
    name: Add packages to public Debian repository
    runs-on: ubuntu-latest
    needs: merge-artefacts
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: "merged-artifacts"
      - name: Add releases to repo
        uses: smeinecke/apt-repo-action@master
        with:
          github_token: ${{ github.token }}
          repo_supported_arch: |
            amd64
            arm64
          repo_supported_version: |
            sid
          file: |
            *.deb
          version_by_filename: true
          private_key: ${{ secrets.APT_SIGNING_KEY }}
          public_key: ${{ vars.APT_PUBLIC_KEY }}
          key_passphrase: ""
          skip_duplicates: true
